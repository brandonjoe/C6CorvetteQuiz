{"version":3,"sources":["Correct/Correct.module.css","Wrong/Wrong.module.css","QuestionPage/QuestionPage.module.css","data.js","context.js","Correct/Correct.js","Wrong/Wrong.js","QuestionPage/QuestionPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","quizImg","cars","id","year","description","img","MyContext","React","createContext","MyProvider","state","questionsRight","questionsWrong","carSelection","questionsList","selectedCar","setCars","tempCars","forEach","item","push","_this","setState","getRandomCar","newCar","Math","floor","random","length","index","indexOf","splice","this","react_default","a","createElement","Provider","value","Object","objectSpread","props","children","Component","MyConsumer","Consumer","Correct","console","log","className","classes","onClick","reset","Wrong","options","label","QuestionPage","selectedOption","isPicking","showCorrect","showWrong","handler","checkAnswer","arr","map","parseInt","current","arraysEqual","context","isCorrect","_arr1","_arr2","Array","isArray","arr1","concat","sort","arr2","i","modal","_this2","isWrong","src_Correct_Correct","src_Wrong_Wrong","Fragment","src","key","react_select_browser_esm","isSearchable","isMulti","onChange","type","contextType","App","src_QuestionPage_QuestionPage","Boolean","window","location","hostname","match","ReactDOM","render","context_MyProvider","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3eb93491.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Correct_container__3yFaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wrong_container__1HWdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quizImg\":\"QuestionPage_quizImg__Rp2-z\"};","export const cars = [\n  {\n    id:1,\n    year: [2005],\n    description: `This one is 2005 because they didn't make this color until 2006`,\n    img: \"img/id1.jpg\"\n    \n  },\n  {\n    id:2,\n    year: [2006],\n    description: `This one is 2006 because they didn't make this color until 2004`,\n    img: \"img/id2.jpg\"\n  }\n  ,\n  {\n    id:3,\n    year: [2007, 2008],\n    description: `This one is 2007 because they didn't make this color until 2004`,\n    img: \"img/id3.jpg\"\n  }\n  ,\n  {\n    id:4,\n    year: [2008, 2009],\n    description: `This one is 2008 because they didn't make this color until 2004`,\n    img: \"img/id4.jpg\"\n  }\n  ,\n  {\n    id:5,\n    year: [2009, 2010],\n    description: `This one is 2009 because they didn't make this color until 2004`,\n    img: \"img/id5.jpg\"\n  }\n  ,\n  {\n    id:6,\n    year: [2010],\n    description: `This one is 2010 because they didn't make this color until 2004`,\n    img: \"img/id6.jpg\"\n  }\n]","import React, { Component } from 'react';\r\nimport {cars} from  './data';\r\nexport const MyContext = React.createContext();\r\nclass MyProvider extends Component {\r\n    state={\r\n        questionsRight: 231423,\r\n        questionsWrong: 12321321,\r\n        carSelection: [],\r\n        questionsList: [],\r\n        selectedCar: cars[0]\r\n    }\r\n    componentWillMount(){\r\n        this.setCars();\r\n        \r\n    }\r\n  \r\n    setCars = () => {\r\n        let tempCars = [];\r\n        cars.forEach(item => {\r\n            tempCars.push(item)\r\n        })\r\n        this.setState(() => {\r\n            return {carSelection: tempCars}\r\n        })\r\n        \r\n    }\r\n    getRandomCar = () => {\r\n        let newCar = this.state.carSelection[Math.floor(Math.random()*this.state.carSelection.length)];\r\n        let index = this.state.carSelection.indexOf(newCar)\r\n        this.state.carSelection.splice(index, 1)\r\n        this.setState(() => {\r\n            return {selectedCar: newCar}\r\n        })\r\n        return newCar;\r\n    }\r\n    render() {\r\n        return (\r\n          <MyContext.Provider value={{\r\n              ...this.state,\r\n              getRandomCar: this.getRandomCar\r\n          }}>\r\n              {this.props.children}\r\n          </MyContext.Provider>\r\n        );\r\n    }\r\n}\r\nconst MyConsumer = MyContext.Consumer;\r\n\r\nexport{MyProvider, MyConsumer}\r\n","import React, { Component } from 'react';\r\nimport classes from './Correct.module.css'\r\nclass Correct extends Component {\r\n    render() {\r\n        console.log(this.props.description)\r\n        return (\r\n            <div className={classes.container}>\r\n                Correct!\r\n                {this.props.description}\r\n                <button onClick = {this.props.reset}>REWIND TIME</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Correct;","import React, { Component } from 'react';\r\nimport classes from './Wrong.module.css'\r\nclass Wrong extends Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.container}>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wrong;","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { MyConsumer } from \"../context.js\";\r\nimport Correct from '../Correct/Correct'\r\nimport Wrong from '../Wrong/Wrong';\r\nimport classes from './QuestionPage.module.css'\r\n// import classes from './QuestionPage.module.css'\r\nconst options = [\r\n  { value: 2005, label: \"2005\" },\r\n  { value: 2006, label: \"2006\" },\r\n  { value: 2007, label: \"2007\" },\r\n  { value: 2008, label: \"2008\" },\r\n  { value: 2009, label: \"2009\" },\r\n  { value: 2010, label: \"2010\" },\r\n  { value: 2011, label: \"2011\" },\r\n  { value: 2012, label: \"2012\" },\r\n  { value: 2013, label: \"2013\" }\r\n];\r\nclass QuestionPage extends Component {\r\n  state = { \r\n    selectedOption: [],\r\n    isPicking: true,\r\n    showCorrect: false,\r\n    showWrong: false\r\n  };\r\n  componentWillMount() {\r\n    let value = this.context;\r\n    this.setState({\r\n      current: value.getRandomCar()\r\n    });\r\n  }\r\n  handler = selectedOption => {\r\n    this.setState({ selectedOption });\r\n  };\r\n  arraysEqual(_arr1, _arr2) {\r\n    if (\r\n      !Array.isArray(_arr1) ||\r\n      !Array.isArray(_arr2) ||\r\n      _arr1.length !== _arr2.length\r\n    )\r\n      return false;\r\n\r\n    var arr1 = _arr1.concat().sort();\r\n    var arr2 = _arr2.concat().sort();\r\n\r\n    for (var i = 0; i < arr1.length; i++) {\r\n      if (arr1[i] !== arr2[i]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  checkAnswer = () => {\r\n    this.setState(() => {\r\n      return {isPicking: false}\r\n    })\r\n    let arr = [];\r\n    \r\n    this.state.selectedOption.map(item => {\r\n      return arr.push(parseInt(item.label));\r\n    });\r\n    console.log(arr)\r\n    console.log(this.state.current.year)\r\n    if (this.arraysEqual(this.state.current.year, arr) === true) {\r\n      this.setState(() => {\r\n        return {showCorrect: true}\r\n      })\r\n    } else {\r\n      this.setState(() => {\r\n        return {showWrong: true}\r\n      })\r\n    }\r\n  };\r\n  reset = () => {\r\n    let value = this.context\r\n    this.setState({\r\n      isPicking: true,\r\n      isCorrect: false,\r\n      showCorrect: false,\r\n      showWrong: false,\r\n      selectedOption: [],\r\n      current: value.getRandomCar()      \r\n    })\r\n  }\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n    const isCorrect = this.state.showCorrect;\r\n    const isWrong = this.state.showWrong;\r\n    const isPicking = this.state.isPicking;\r\n    let modal;\r\n    if(isCorrect && isPicking === false) {\r\n      modal = <Correct reset={this.reset} description={this.state.current.description} />;\r\n    } else if (isWrong && isPicking === false) {\r\n      modal = <Wrong /> \r\n    }\r\n    return (\r\n      <div>\r\n        <MyConsumer>\r\n          {value => {\r\n            console.log(this.state)\r\n            return (\r\n              <React.Fragment>\r\n                <div>What is the year of this car?</div>\r\n                <img className={classes.quizImg} src={value.selectedCar.img} />\r\n                <div>\r\n                  {value.selectedCar.year.map((item, index) => {\r\n                    return <div key={index}>{item}</div>;\r\n                  })}\r\n                </div>\r\n                <Select\r\n                  isSearchable={true}\r\n                  isMulti={true}\r\n                  value={selectedOption}\r\n                  onChange={this.handler}\r\n                  options={options}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  onClick={this.checkAnswer}\r\n                />\r\n                {modal}\r\n              </React.Fragment>\r\n            );\r\n          }}\r\n        </MyConsumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nQuestionPage.contextType = MyConsumer;\r\nexport default QuestionPage;\r\n","import React from 'react';\nimport QuestionPage from './QuestionPage/QuestionPage.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <QuestionPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {MyProvider} from './context'\nReactDOM.render(\n    <MyProvider><App /></MyProvider>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}